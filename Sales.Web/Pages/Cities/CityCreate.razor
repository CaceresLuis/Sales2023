@page "/Cities/create/{StateId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]
<h3>Crear Ciudad</h3>

<CityForm @ref="cityForm" City="city" OnValidSubmit="Create" ReturnAction="Back"></CityForm>

@code {
    private CityDto city = new();
    private CityForm? cityForm;

    [Parameter]
    public int StateId { get; set; }
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task Create()
    {
        city.StateId = StateId;
        var httpResponse = await repository.Post("cities", city);
        if (httpResponse.Error)
        {

            Console.WriteLine(city);
            string? message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        await sweetAlertService.FireAsync("Registrada", "La ciudad fue registrada", SweetAlertIcon.Success);
        Back();
    }

    private void Back()
    {
        cityForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"states/details/{StateId}");
    }
}
