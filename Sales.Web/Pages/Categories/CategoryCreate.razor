@page  "/categories/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]
<h3>Crear Categoria</h3>

<CategoryForm @ref="categoryForm" Category="Category" OnValidSubmit="Create" ReturnAction="Back"></CategoryForm>

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;
    private CategoryForm? categoryForm;
    private CategoryDto Category = new();

    private async Task Create()
    {
        var httpResponse = await repository.Post("categories", Category);
        if (httpResponse.Error)
        {
            string? message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("La categoria fue Registrada.", Severity.Success, config => { config.Icon = Icons.Material.Filled.Check; });
        Back();
    }

    private void Back()
    {
        categoryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("Categories");
    }
}
