@page "/RecoverPassword"
@inject IRepository repositories
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

@if(Loading)
{
    <div class="spinner-border" />
}
<div class="row">
    <div class="col-6">
        <EditForm Model="requestDto" OnValidSubmit="SendRecoverPasswortEmailTokenAsync">
            <DataAnnotationsValidator/>
            <div class="card">
                <div class="card-header">
                    <span>
                        <i class="bi bi-key-fill"/> Enviar email para recuperar contraseña
                        <MudButton ButtonType="ButtonType.Submit" class="float-end" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Send">Enviar</MudButton>
                    </span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>Email</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@requestDto.Email"/>
                            <ValidationMessage For="@(() => requestDto.Email)"/>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private bool Loading;
    private ResetPaswordRequestDto requestDto = new();

    private async Task SendRecoverPasswortEmailTokenAsync()
    {
        Loading = true;
        requestDto.UrlBase = "localhost:7294";
        var httpResponse = await repositories.Post("accounts/RecoverPassword", requestDto);
        if (httpResponse.Error)
        {
            string? message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            Loading = false;
            return;
        }

        Loading = false;
        await sweetAlertService.FireAsync("Confirmacion", "Su cuenta ha sido creada, se ha enviado un correo para finalizar", SweetAlertIcon.Info);
        navigationManager.NavigateTo("/");
    }
}
