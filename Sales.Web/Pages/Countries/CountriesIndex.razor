@page "/countries"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Paises</h3>

<a class="btn btn-primary mb-3" href="/countries/create">Crear Pais <i class="oi oi-plus"></i></a>

<GenericList MyList="Countries">
    <Body>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Pais</th>
                    <th>Estados / Departamentos</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var country in Countries!)
                {
                    <tr>
                        <td>
                            @country.Name
                        </td>
                        <td>
                            @country.StatesNumber
                        </td>
                        <td>
                            <a class="btn btn-info" href="/countries/details/@country.Id"><i class="oi oi-list"></i></a>
                            <a class="btn btn-warning" href="/countries/edit/@country.Id"><i class="oi oi-pencil"></i></a>
                            <button class="btn btn-danger" @onclick=@(() => DeleteAsync(country.Id))><i class="oi oi-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </Body>
</GenericList>

@code {
    public List<CountryDto>? Countries { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        var httpResponse = await repository.Get<List<CountryDto>>("api/countries");
        Countries = httpResponse.Response!;
    }

    private async Task DeleteAsync(int id)
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
        {
                Title = "Confirmacion",
                Text = "Realmente deseas eliminar el registro?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
        });

        if (string.IsNullOrEmpty(result.Value))
            return;

        var httpResponse = await repository.Delete($"api/countries/id?id={id}");
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        await sweetAlertService.FireAsync("Borrado", "El pais fue borrado", SweetAlertIcon.Success);
        await LoadAsync();
    }
}

