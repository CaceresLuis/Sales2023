@page "/claims-principle-data"
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1>ClaimsPrincipal Data</h1>

<p>@authMessage</p>

@if (claims.Count() > 0)
{
    <ul>
        @foreach (var claim in claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}

<p>Rol: @role</p>

@code {
    private string? authMessage;
    private string? role;
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            authMessage = $"{user.Identity.Name} is authenticated.";
            claims = user.Claims;
            role = user.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
        }
    }
}